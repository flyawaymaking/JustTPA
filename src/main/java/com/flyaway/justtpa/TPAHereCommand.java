package com.flyaway.justtpa;

import org.bukkit.Bukkit;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.command.TabCompleter;
import org.bukkit.entity.Player;
import org.bukkit.util.StringUtil;

import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.event.ClickEvent;
import net.kyori.adventure.text.format.NamedTextColor;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class TPAHereCommand implements CommandExecutor, TabCompleter {
    private final JustTPA plugin;
    
    public TPAHereCommand(JustTPA plugin) {
        this.plugin = plugin;
    }
    
    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (!(sender instanceof Player)) {
            sender.sendMessage(Component.text("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤!", NamedTextColor.RED));
            return true;
        }
        
        Player player = (Player) sender;

        if (!player.hasPermission("justtpa.tpahere")) {
            player.sendMessage(Component.text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!", NamedTextColor.RED));
            return true;
        }
        
        if (args.length != 1) {
            player.sendMessage(Component.text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /tpahere <–Ω–∏–∫>", NamedTextColor.RED)); // üî¥ –ò–°–ü–†–ê–í–õ–ï–ù–û
            return true;
        }
        
        Player target = Bukkit.getPlayer(args[0]);
        if (target == null) {
            player.sendMessage(Component.text("–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤ —Å–µ—Ç–∏!", NamedTextColor.RED));
            return true;
        }
        
        if (target.equals(player)) {
            player.sendMessage(Component.text("–ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å —Å–∞–º–æ–º—É —Å–µ–±–µ!", NamedTextColor.RED));
            return true;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º tptoggle
        if (!isTeleportEnabled(target)) {
            player.sendMessage(Component.text("–≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ –æ—Ç–∫–ª—é—á–∏–ª –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—é!", NamedTextColor.RED));
            return true;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        JustTPA.TPARequest existingRequest = plugin.getPendingRequests().get(target.getUniqueId());
        if (existingRequest != null && existingRequest.getSender().equals(player.getUniqueId())) {
            if (!existingRequest.isExpired()) {
                player.sendMessage(Component.text("–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å —ç—Ç–æ–º—É –∏–≥—Ä–æ–∫—É!", NamedTextColor.RED));
                return true;
            }
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å (–ø–æ–º–µ—á–∞–µ–º –µ–≥–æ –∫–∞–∫ tpahere)
        JustTPA.TPARequest request = new JustTPA.TPARequest(player.getUniqueId(), target.getUniqueId(), true);
        plugin.getPendingRequests().put(target.getUniqueId(), request);
        
        // –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é
        Component senderMessage = Component.text()
                .append(Component.text("‚úì ", NamedTextColor.GREEN))
                .append(Component.text("–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—é –∫ –≤–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏–≥—Ä–æ–∫—É ", NamedTextColor.GRAY))
                .append(Component.text(target.getName(), NamedTextColor.YELLOW))
                .append(Component.newline())
                .append(createCancelButton(target.getName()))
                .build();
        
        player.sendMessage(senderMessage);
        
        // –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—é
        Component targetMessage = Component.text()
                .append(Component.text("‚úà ", NamedTextColor.AQUA))
                .append(Component.text(player.getName(), NamedTextColor.YELLOW))
                .append(Component.text(" —Ö–æ—á–µ—Ç, —á—Ç–æ–±—ã –≤—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏—Å—å –∫ –Ω–µ–º—É!", NamedTextColor.GRAY))
                .append(Component.newline())
                .append(createAcceptButton())
                .append(Component.text(" "))
                .append(createDenyButton())
                .build();
        
        target.sendMessage(targetMessage);
        
        return true;
    }
    
    private Component createCancelButton(String targetName) {
        return Component.text()
                .append(Component.text("[‚úï –û–¢–ú–ï–ù–ò–¢–¨]", NamedTextColor.RED))
                .clickEvent(ClickEvent.runCommand("/tpcancel " + targetName))
                .hoverEvent(Component.text("–ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å", NamedTextColor.GRAY))
                .build();
    }
    
    private Component createAcceptButton() {
        return Component.text()
                .append(Component.text("[‚úì –ü–†–ò–ù–Ø–¢–¨]", NamedTextColor.GREEN))
                .clickEvent(ClickEvent.runCommand("/tpaccept"))
                .hoverEvent(Component.text("–ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å", NamedTextColor.GRAY))
                .build();
    }
    
    private Component createDenyButton() {
        return Component.text()
                .append(Component.text("[‚úï –û–¢–ö–õ–û–ù–ò–¢–¨]", NamedTextColor.RED))
                .clickEvent(ClickEvent.runCommand("/tpdeny"))
                .hoverEvent(Component.text("–ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å", NamedTextColor.GRAY))
                .build();
    }
    
    private boolean isTeleportEnabled(Player player) {
        try {
            Object essentials = Bukkit.getServer().getPluginManager().getPlugin("Essentials");
            if (essentials != null) {
                Object user = essentials.getClass().getMethod("getUser", Player.class).invoke(essentials, player);
                return (boolean) user.getClass().getMethod("isTeleportEnabled").invoke(user);
            }
        } catch (Exception ex) {
            // –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ tptoggle –≤—ã–∫–ª—é—á–µ–Ω
            plugin.getLogger().warning("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å tptoggle –¥–ª—è –∏–≥—Ä–æ–∫–∞ " + player.getName());
        }
        return false;
    }
    
    @Override
    public List<String> onTabComplete(CommandSender sender, Command command, String alias, String[] args) {
        List<String> completions = new ArrayList<>();
        
        if (args.length == 1) {
            List<String> playerNames = Bukkit.getOnlinePlayers().stream()
                    .map(Player::getName)
                    .collect(Collectors.toList());
            
            StringUtil.copyPartialMatches(args[0], playerNames, completions);
        }
        
        return completions;
    }
}
